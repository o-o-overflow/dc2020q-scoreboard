{"version":3,"sources":["Challenge.jsx","HiddenChallenge.jsx","ChallengeSection.jsx","ChallengeMenu.jsx","ChallengeModal.jsx","GameMatrix.jsx","Navbar.jsx","Rules.jsx","Scoreboard.jsx","App.jsx","Router.jsx","index.js"],"names":["Challenge","props","styles","id","points","solved","tags","item_index","classes","backgroundImage","tag_divs","split","map","tag","index","title","trim","className","key","onClick","onKeyPress","style","src","alt","HiddenChallenge","ChallengeSection","challenges","challenge","unopened","ChallengeMenu","componentWillUnmount","onUnload","buildSections","sectionTitle","openChallenges","unopenedChallenges","Array","from","_","i","concat","sectionOrder","sections","this","height","href","target","rel","React","Component","ChallengeModal","handleFlagChange","event","setState","flag","value","handleKeyPress","handleSubmit","state","length","status","worker","postMessage","loadData","description","fetch","method","then","response","json","body","console","log","message","showdown","Converter","literalMidWordUnderscores","simplifiedAutoLink","makeHtml","challengeId","flagHash","Worker","onmessage","data","complete","digest","terminate","form_submission","htmlFor","placeholder","onChange","type","solve_string","numSolved","role","aria-label","onClose","aria-hidden","dangerouslySetInnerHTML","__html","GameMatrix","teamScoreboardOrder","team","name","solvedRow","Set","solves","scope","solvesByChallenge","has","Object","keys","cat","chall","push","sort","header","Navbar","leftLinks","item","exact","to","Rules","Scoreboard","num","teamRows","lastSolveTime","pointsByTeam","categoryByChallenge","cssClass","replace","categoryIcon","teamName","ctfTimeTeamID","teams","undefined","ctfTimeLink","teamLink","element","document","getElementById","window","scroll","behavior","top","offsetTop","ReactModal","setAppElement","App","handleCloseModal","showModal","handleOpenChallengeModal","showChallengeId","loadChallenges","processChallenges","catch","error","loadTeams","lastSolveTimeByTeam","solvesByTeam","solvesByTeamChallengeTime","forEach","time","Math","max","pointsByChallenge","open","solvers","category","Number","isInteger","parseInt","object","includes","a","b","unopened_by_category","openedByCategory","path","render","component","contentLabel","isOpen","onRequestClose","onSolve","Router","ReactDOM","createElement"],"mappings":"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","file":"static/js/main.60db4a10.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport exact from \"prop-types-exact\";\nimport React from \"react\";\n\nfunction Challenge(props) {\n  const { id, points, solved, tags, item_index } = props;\n\n  let onClick = () => props.onClick(props);\n  let classes = \"challenge\";\n\n  var styles;\n  if (solved) {\n    classes += \"challenge-solved\";\n    styles = {\n      backgroundImage: `url('pics/d/${item_index}.gif')`,\n    };\n  } else {\n    styles = {\n      backgroundImage: `url('pics/a/${item_index}.gif')`,\n    };\n  }\n\n  const tag_divs = tags.split(\",\").map((tag, index) => {\n    return (\n      <div\n        title={`${tag.trim()}`}\n        className={`category category-${tag.trim()}`}\n        key={index}\n      />\n    );\n  });\n\n  return (\n    <div\n      className={classes}\n      onClick={onClick}\n      onKeyPress={() => {}}\n      style={styles}\n    >\n      <div>{tag_divs}</div>\n      <div className=\"challenge-title\">\n        <img src=\"/pics/nomic.png\" alt=\"no microphone\" />\n        {id}\n      </div>\n      <div className=\"challenge-score\">{points}</div>\n    </div>\n  );\n}\nChallenge.propTypes = exact({\n  id: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  points: PropTypes.number.isRequired,\n  solved: PropTypes.bool.isRequired,\n  tags: PropTypes.string.isRequired,\n  item_index: PropTypes.number.isRequired,\n});\nexport default Challenge;\n","import PropTypes from \"prop-types\";\nimport exact from \"prop-types-exact\";\nimport React from \"react\";\n\nfunction HiddenChallenge(props) {\n  return <div className=\"challenge challenge-hidden\"></div>;\n}\nHiddenChallenge.propTypes = exact({\n  id: PropTypes.number.isRequired,\n});\nexport default HiddenChallenge;\n","import PropTypes from \"prop-types\";\nimport exact from \"prop-types-exact\";\nimport React from \"react\";\nimport Challenge from \"./Challenge\";\nimport HiddenChallenge from \"./HiddenChallenge\";\n\nfunction ChallengeSection(props) {\n  const challenges = props.challenges.map((challenge, index) => {\n    if (challenge.unopened) {\n      return <HiddenChallenge id={challenge.unopened} key={index} />;\n    }\n\n    return (\n      <Challenge\n        {...challenge}\n        key={challenge.id}\n        onClick={props.onClick}\n        item_index={index}\n      />\n    );\n  });\n\n  return challenges;\n}\nChallengeSection.propTypes = exact({\n  challenges: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onClick: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n});\nexport default ChallengeSection;\n","import PropTypes from \"prop-types\";\nimport exact from \"prop-types-exact\";\nimport React from \"react\";\nimport ChallengeSection from \"./ChallengeSection\";\n\nclass ChallengeMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sectionOrder = [\"haiku\"];\n  }\n\n  componentWillUnmount = () => {\n    this.props.onUnload();\n  };\n\n  buildSections = (sectionTitle) => {\n    const openChallenges = this.props.challenges[sectionTitle] || [];\n    const unopenedChallenges = Array.from(\n      Array(this.props.unopened[sectionTitle] || 0),\n      (_, i) => ({ unopened: i + 1000 })\n    );\n    return (\n      <ChallengeSection\n        challenges={openChallenges.concat(unopenedChallenges)}\n        key={sectionTitle}\n        onClick={this.props.onClick}\n        title={sectionTitle}\n      />\n    );\n  };\n\n  render() {\n    const sections = this.sectionOrder.map(this.buildSections);\n    return (\n      <>\n        <div className=\"d-flex justify-content-center\">\n          <img alt=\"zoom\" style={{ height: \"93px\" }} src=\"/pics/zooom.png\" />\n        </div>\n        <div className=\"footer-padding justify-content-center row\">\n          {sections}\n        </div>\n        ;\n        <footer className=\"navbar navbar-dark bg-dark fixed-bottom\">\n          <div>\n            <img alt=\"zoom-video\" src=\"/pics/video_icons.png\" />\n          </div>\n          <div>\n            <a\n              href=\"https://discord.gg/yTjdTH\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img alt=\"zoom-chat\" src=\"/pics/chat.png\" />\n            </a>\n          </div>\n          <h3>\n            <a href=\"https://oooverflow.io/\">\n              <span className=\"badge badge-danger\">Leave</span>\n            </a>\n          </h3>\n        </footer>\n      </>\n    );\n  }\n}\nChallengeMenu.propTypes = exact({\n  challenges: PropTypes.objectOf(PropTypes.arrayOf(PropTypes.object))\n    .isRequired,\n  onClick: PropTypes.func.isRequired,\n  onUnload: PropTypes.func.isRequired,\n  unopened: PropTypes.objectOf(PropTypes.number).isRequired,\n});\nexport default ChallengeMenu;\n","import PropTypes from \"prop-types\";\nimport exact from \"prop-types-exact\";\nimport React from \"react\";\nimport showdown from \"showdown\";\n\nclass ChallengeModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: \"\",\n      flag: \"\",\n      flagHash: \"\",\n      status: \"\",\n    };\n    this.worker = new Worker(\"worker.js\");\n    this.worker.onmessage = (message) => {\n      if (message.data.complete) {\n        const status =\n          message.data.digest === this.state.flagHash\n            ? \"success!\"\n            : \"incorrect flag\";\n        this.setState({ status });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentWillUnmount() {\n    this.worker.terminate();\n  }\n\n  handleFlagChange = (event) => {\n    this.setState({ flag: event.target.value });\n  };\n\n  handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      this.handleSubmit();\n    }\n  };\n\n  handleSubmit = () => {\n    if (this.state.flag.length < 1 || this.state.flag.length > 160) {\n      this.setState({ status: \"invalid flag\" });\n    } else {\n      this.worker.postMessage(this.state.flag);\n    }\n  };\n\n  loadData = () => {\n    this.setState({ description: \"Loading...\" });\n    fetch(\"scoreboard.json\", { method: \"GET\" })\n      .then((response) =>\n        response.json().then((body) => ({ body, status: response.status }))\n      )\n      .then(({ body, status }) => {\n        if (status !== 200) {\n          console.log(status);\n          console.log(body.message);\n          return;\n        }\n        const converter = new showdown.Converter({\n          literalMidWordUnderscores: true,\n          simplifiedAutoLink: true,\n        });\n        const description = converter.makeHtml(\n          body[this.props.challengeId][\"description\"]\n        );\n        const flagHash = body[this.props.challengeId][\"flag_hash\"];\n        this.setState({ description, flagHash });\n      });\n  };\n\n  render() {\n    let status;\n    if (this.state.status !== \"\") {\n      status = (\n        <div className=\"alert alert-secondary\">Status: {this.state.status}</div>\n      );\n    }\n\n    let form_submission = \"\";\n\n    if (!this.props.solved) {\n      form_submission = (\n        <>\n          <label htmlFor=\"flag\" className=\"sr-only\">\n            Flag\n          </label>\n          <input\n            id=\"flag\"\n            className=\"form-control\"\n            placeholder=\"flag (format: OOO{…})\"\n            onChange={this.handleFlagChange}\n            onKeyPress={this.handleKeyPress}\n            type=\"text\"\n            value={this.state.flag}\n          />\n          <input\n            className=\"btn btn-primary\"\n            onClick={this.handleSubmit}\n            type=\"button\"\n            value=\"Submit Flag\"\n          />\n        </>\n      );\n    }\n\n    const solve_string =\n      this.props.numSolved === 1 ? \"1 solve\" : `${this.props.numSolved} solves`;\n\n    return (\n      <div className=\"modal-dialog\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{`${this.props.challengeId} (${solve_string})`}</h5>\n            <button\n              aria-label=\"Close\"\n              className=\"close\"\n              onClick={this.props.onClose}\n              type=\"button\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <div dangerouslySetInnerHTML={{ __html: this.state.description }} />\n            {status}\n          </div>\n          <div className=\"modal-footer\">\n            {form_submission}\n            <button\n              className=\"btn btn-secondary\"\n              onClick={this.props.onClose}\n              type=\"button\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nChallengeModal.propTypes = exact({\n  challengeId: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSolve: PropTypes.func.isRequired,\n  solved: PropTypes.bool.isRequired,\n  numSolved: PropTypes.number.isRequired,\n});\nexport default ChallengeModal;\n","import React from \"react\";\n\nclass GameMatrix extends React.Component {\n  body() {\n    return this.props.teamScoreboardOrder.map((team) => {\n      return (\n        <tr key={team.name}>\n          <td className=\"sticky-left\" key={team.name}>\n            {team.name}\n          </td>\n          {this.solvedRow(new Set(team.solves))}\n        </tr>\n      );\n    });\n  }\n\n  header() {\n    const theHeaders = this.challenges.map((id) => {\n      return (\n        <th key={id} scope=\"row\">\n          {id} ({this.props.solvesByChallenge[id] || 0})\n        </th>\n      );\n    });\n\n    return theHeaders;\n  }\n\n  solvedRow(solves) {\n    return this.challenges.map((id) => {\n      return <td key={id}>{solves.has(id) ? \"✔\" : \"❌\"}</td>;\n    });\n  }\n\n  render() {\n    this.challenges = [];\n    Object.keys(this.props.challenges).map((cat) => {\n      return this.props.challenges[cat].map((chall) => {\n        return this.challenges.push(chall.id);\n      });\n    });\n\n    this.challenges.sort();\n\n    return (\n      <div className=\"table-responsive bg-light\">\n        <table className=\"table table-hover table-sm\">\n          <thead>\n            <tr>\n              <th className=\"sticky-left\" scope=\"column\">\n                Team\n              </th>\n              {this.header()}\n            </tr>\n          </thead>\n          <tbody>{this.body()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default GameMatrix;\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nfunction Navbar(props) {\n  const leftLinks = [\n    [\"Challenges\", \"/\", true],\n    [\"Rules\", \"/rules\"],\n    [\"Scoreboard\", \"/scoreboard\"],\n    [\"Solves\", \"/solves\"],\n  ].map((item) => (\n    <li className=\"nav-item\" key={item[0]}>\n      <NavLink className=\"nav-link\" exact={item[2]} to={item[1]}>\n        {item[0]}\n      </NavLink>\n    </li>\n  ));\n\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark sticky-top\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        DC28 Quals\n      </Link>\n      <div className=\"navbar-collapse\">\n        <ul className=\"navbar-nav mr-auto\">{leftLinks}</ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nfunction Rules() {\n  return (\n    <div className=\"bg-light\">\n      <h2>Intro</h2>\n      <p>Some DEF CON Quals specific introduction.</p>\n\n      <h2>Specifc Rules</h2>\n      <ul>\n        <li>\n          No Denial of Service—DoS is super lame, don't do it or you will be\n          banned\n        </li>\n        <li>No sharing flags, exploits, or hints—Do your own hacks</li>\n        <li>\n          No attacks against our infrastructure—Hack the challenges, not us\n        </li>\n        <li>No automated scanning—For these challenges, do better</li>\n      </ul>\n\n      <h2>Scoring</h2>\n      <p>\n        All challenges will be adaptive scoring based on the number of solves:\n        starting at 500 and decreasing from there (based on the total number of\n        teams that solved the challenge). We{\" \"}\n        <a href=\"https://github.com/o-o-overflow/scoring-playground\">\n          released a scoring playground\n        </a>{\" \"}\n        so that teams with questions or concerns about the exact scoring\n        algorithm can see how that affects the overall ranking.\n      </p>\n\n      <h2>\n        New challenge category: GOLF{\" \"}\n        <span aria-label=\"woman golfing emoji\" role=\"img\">\n          🏌️‍♀️\n        </span>\n        <span aria-label=\"man golfing emoji\" role=\"img\">\n          🏌️‍♂️\n        </span>\n        <span aria-label=\"golf hole flag\" role=\"img\">\n          ⛳\n        </span>\n      </h2>\n      <p>\n        Last year, we challenged you with an{\" \"}\n        <a href=\"https://scoreboard2019.oooverflow.io/#/leaderboard/speedrun-012\">\n          entire category of speedruns{\" \"}\n          <span aria-label=\"racecar\" role=\"img\">\n            🏎️\n          </span>\n        </a>\n        : bite-size problems designed for hacking races. Speedrun challenges\n        added a twist by letting the top teams dictate awarded points by beating\n        each other to the punch.\n      </p>\n\n      <p>What if they could also dictate the difficulty?</p>\n\n      <p>\n        This year, the Order of the Overflow is excited to introduce a new style\n        of CTF challenge: golf{\" \"}\n        <span aria-label=\"golf hole flag\" role=\"img\">\n          ⛳\n        </span>\n        . In a golf challenge, teams race against time to solve a challenge\n        that's gradually degrading in difficulty. The sooner they solve it, the\n        more difficult it remains, the harder it is for other teams to catch up,\n        and the more points it will be worth. Can you keep those points out of\n        the hands of your competition?\n      </p>\n\n      <p>\n        More information on{\" \"}\n        <a href=\"https://oooverflow.io/dc-ctf-2020-quals/\">\n          Golf Challenges here\n        </a>\n        .\n      </p>\n\n      <h2>Flag Format</h2>\n      <p>\n        All flags will be in the format: <code>OOO&#123;…&#125;</code>\n      </p>\n      <p>\n        <strong>\n          <em>\n            NOTE: You must submit the whole thing, including the{\" \"}\n            <code>OOO&#123;…&#125;</code>.\n          </em>\n        </strong>\n      </p>\n\n      <h2>Proof of Work (POW)</h2>\n      <p>\n        We may implement a POW in front of a challenge if we feel it is\n        necessary. Specific POW, along with a client, will be released at game\n        time.\n      </p>\n\n      <h2>Hints</h2>\n      <p>\n        Do not expect hints. Particularly if a service is already pwned, it\n        would be unfair to give one team a hint when it's already solved. If we\n        feel that something is significantly wrong, then we will update the\n        description and tweet about it. If you ask for hints on <del>IRC</del>{\" \"}\n        or discord, expect to be referred to this URL.\n      </p>\n\n      <h2>\n        Twitter and <del>IRC</del>discord\n      </h2>\n      <p>\n        All game announcements will be made through our Twitter account{\" \"}\n        <a href=\"https://twitter.com/oooverflow\">@oooverflow</a>\n      </p>\n      <p>\n        Times change, and we must change with them. With{\" \"}\n        <a href=\"https://forum.defcon.org/node/232005\">\n          DEF CON Safe Mode this year\n        </a>\n        , and doing so via discord, we're using discord for our idling this\n        year. You can (and should) also hang out with us on the official DEF CON\n        discord <a href=\"https://discord.gg/yTjdTH\">discord.gg/yTjdTH</a> in the\n        CTF category!\n      </p>\n\n      <h2>Flag Submission Delay</h2>\n      <p>Flags can be submitted once every 30 seconds per challenge.</p>\n\n      <h2>Team Size</h2>\n      <p>There is no limit on team sizes.</p>\n\n      <h2>Disclaimer</h2>\n      <p>\n        We reserve the right to change these rules or scoring anytime before the\n        competition starts.\n      </p>\n    </div>\n  );\n}\nexport default Rules;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nfunction categoryIcon(categoryByChallenge, challengeId) {\n  const cssClass = categoryByChallenge[challengeId]\n    .split(\",\")[0]\n    .replace(/ /g, \"-\");\n  return (\n    <span\n      className={`category-${cssClass}`}\n      key={challengeId}\n      title={challengeId}\n    />\n  );\n}\n\nfunction Scoreboard(props) {\n  var num = 1;\n  const teams = props.teamScoreboardOrder.map((team) => ({\n    lastSolveTime: team.lastSolveTime,\n    name: team.name,\n    num: num++,\n    points: props.pointsByTeam[team.name],\n    solves: team.solves.map((id) =>\n      categoryIcon(props.categoryByChallenge, id)\n    ),\n  }));\n\n  function ctfTimeLink(teamName) {\n    const ctfTimeTeamID = props.teams[teamName];\n    if (ctfTimeTeamID !== undefined) {\n      return (\n        <a\n          href={`https://ctftime.org/team/${ctfTimeTeamID}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {teamName}\n        </a>\n      );\n    }\n    return teamName;\n  }\n\n  const teamRows = teams.map((team) => (\n    <tr key={team.name} id={team.name}>\n      <td>{team.num}</td>\n      <td>{team.points}</td>\n      <td>{ctfTimeLink(team.name)}</td>\n      <td>{team.solves}</td>\n    </tr>\n  ));\n\n  function handleClick() {\n    const element = document.getElementById(props.team);\n    if (element) {\n      window.scroll({\n        behavior: \"smooth\",\n        top: element.offsetTop,\n      });\n    }\n  }\n\n  const teamLink = props.team ? (\n    <button type=\"button\" className=\"btn btn-link\" onClick={handleClick}>\n      (My Team)\n    </button>\n  ) : null;\n\n  return (\n    <div className=\"table-responsive bg-light\">\n      <table className=\"table table-hover table-sm\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Place</th>\n            <th scope=\"col\">Points</th>\n            <th scope=\"col\">Team {teamLink}</th>\n            <th scope=\"col\">Completed</th>\n          </tr>\n        </thead>\n        <tbody>{teamRows}</tbody>\n      </table>\n    </div>\n  );\n}\nScoreboard.propTypes = {\n  categoryByChallenge: PropTypes.objectOf(PropTypes.string).isRequired,\n  lastSolveTimeByTeam: PropTypes.objectOf(PropTypes.number).isRequired,\n  pointsByTeam: PropTypes.objectOf(PropTypes.number).isRequired,\n  solvesByTeam: PropTypes.objectOf(PropTypes.arrayOf(PropTypes.string))\n    .isRequired,\n  teams: PropTypes.objectOf(PropTypes.number).isRequired,\n};\nexport default Scoreboard;\n","import React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { Route } from \"react-router-dom\";\nimport ChallengeMenu from \"./ChallengeMenu\";\nimport ChallengeModal from \"./ChallengeModal\";\nimport GameMatrix from \"./GameMatrix\";\nimport Navbar from \"./Navbar\";\nimport Rules from \"./Rules\";\nimport Scoreboard from \"./Scoreboard\";\n\nReactModal.setAppElement(\"#root\");\n\nfunction challengePoints(solvers, category) {\n  if (!Number.isInteger(solvers) || solvers < 2) return 500;\n  return parseInt(100 + 400 / (1 + 0.08 * solvers * Math.log(solvers)), 10);\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      challenges: {},\n      lastSolveTimeByTeam: {},\n      openedByCategory: {},\n      solvesByChallenge: {},\n      pointsByTeam: {},\n      showChallengeId: \"\",\n      showModal: null,\n      solvesByTeam: {},\n      teams: {},\n      teamScoreboardOrder: [],\n      unopened: {},\n    };\n    this.categoryByChallenge = {};\n  }\n\n  componentDidMount() {\n    this.loadChallenges();\n    this.loadTeams();\n  }\n\n  handleCloseModal = () => {\n    this.setState({ showModal: null });\n  };\n\n  handleOpenChallengeModal = (event) => {\n    this.setState({\n      showChallengeId: event.id,\n      showModal: \"challenge\",\n    });\n  };\n\n  loadChallenges = () => {\n    fetch(\"challenges.json\", { method: \"GET\" })\n      .then((response) =>\n        response.json().then((body) => ({ body, status: response.status }))\n      )\n      .then(({ body, status }) => {\n        if (status !== 200) {\n          console.log(status);\n          console.log(body.message);\n          return;\n        }\n        this.processChallenges(body.message);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  loadTeams = () => {\n    fetch(\"teams.json\", { method: \"GET\" })\n      .then((response) =>\n        response.json().then((body) => ({ body, status: response.status }))\n      )\n      .then(({ body, status }) => {\n        if (status !== 200) {\n          console.log(status);\n          console.log(body.message);\n          return;\n        }\n        this.setState({ teams: body.message.teams });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  processChallenges = (data) => {\n    const lastSolveTimeByTeam = {};\n    const solvesByChallenge = {};\n    const solvesByTeam = {};\n    const solvesByTeamChallengeTime = {};\n    data.solves.forEach(([id, team, time]) => {\n      if (id in solvesByChallenge) {\n        solvesByChallenge[id] += 1;\n      } else {\n        solvesByChallenge[id] = 1;\n      }\n\n      if (team in solvesByTeam) {\n        lastSolveTimeByTeam[team] = Math.max(lastSolveTimeByTeam[team], time);\n        solvesByTeam[team].push(id);\n        if (!(team in solvesByTeamChallengeTime)) {\n          solvesByTeamChallengeTime[team] = {};\n        }\n        solvesByTeamChallengeTime[team][id] = time;\n      } else {\n        lastSolveTimeByTeam[team] = time;\n        solvesByTeam[team] = [id];\n        if (!(team in solvesByTeamChallengeTime)) {\n          solvesByTeamChallengeTime[team] = {};\n        }\n        solvesByTeamChallengeTime[team][id] = time;\n      }\n    });\n\n    const pointsByChallenge = {};\n    const challenges = {};\n    data.open.forEach(([id, tags, category, _openTime]) => {\n      this.categoryByChallenge[id] = tags;\n      pointsByChallenge[id] = challengePoints(solvesByChallenge[id], category);\n\n      const object = {\n        id,\n        points: pointsByChallenge[id],\n        solved: (solvesByTeam[this.state.team] || []).includes(id),\n        tags,\n      };\n      if (category in challenges) {\n        challenges[category].push(object);\n      } else {\n        challenges[category] = [object];\n      }\n    });\n\n    const pointsByTeam = {};\n    Object.keys(solvesByTeam).forEach((team) => {\n      let points = 0;\n      solvesByTeam[team].forEach((id) => {\n        points += pointsByChallenge[id];\n      });\n      pointsByTeam[team] = points;\n    });\n\n    const teamScoreboardOrder = Object.keys(pointsByTeam).map((name) => ({\n      lastSolveTime: lastSolveTimeByTeam[name],\n      name,\n      points: pointsByTeam[name],\n      solves: solvesByTeam[name],\n    }));\n    teamScoreboardOrder.sort((a, b) => {\n      if (a.points === b.points) {\n        return a.lastSolveTime - b.lastSolveTime;\n      }\n      return b.points - a.points;\n    });\n\n    this.setState({\n      challenges,\n      lastSolveTimeByTeam,\n      pointsByTeam,\n      teamScoreboardOrder,\n      solvesByTeam,\n      solvesByChallenge,\n      unopened: data.unopened_by_category,\n    });\n  };\n\n  render() {\n    const teamSolves = this.state.solvesByTeam[this.state.team] || [];\n    const solved = teamSolves.includes(this.state.showChallengeId);\n    return (\n      <>\n        <Navbar />\n        <main role=\"main\" className=\"container-fluid\">\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <ChallengeMenu\n                challenges={this.state.challenges}\n                onClick={this.handleOpenChallengeModal}\n                onUnload={this.handleCloseModal}\n                unopened={this.state.unopened}\n              />\n            )}\n          />\n          <Route exact path=\"/rules\" component={Rules} />\n          <Route\n            exact\n            path=\"/scoreboard\"\n            render={() => (\n              <Scoreboard\n                categoryByChallenge={this.categoryByChallenge}\n                lastSolveTimeByTeam={this.state.lastSolveTimeByTeam}\n                pointsByTeam={this.state.pointsByTeam}\n                solvesByTeam={this.state.solvesByTeam}\n                teamScoreboardOrder={this.state.teamScoreboardOrder}\n                team={this.state.team}\n                teams={this.state.teams}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/solves\"\n            render={() => (\n              <GameMatrix\n                challenges={this.state.challenges}\n                solvesByChallenge={this.state.solvesByChallenge}\n                teamScoreboardOrder={this.state.teamScoreboardOrder}\n              />\n            )}\n          />\n\n          <ReactModal\n            className=\"anything-but-the-default\"\n            contentLabel=\"Challenge Modal\"\n            isOpen={this.state.showModal === \"challenge\"}\n            onRequestClose={this.handleCloseModal}\n          >\n            <ChallengeModal\n              challengeId={this.state.showChallengeId}\n              onClose={this.handleCloseModal}\n              onSolve={this.loadChallenges}\n              solved={solved}\n              numSolved={\n                this.state.solvesByChallenge[this.state.showChallengeId] || 0\n              }\n            />\n          </ReactModal>\n        </main>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nfunction Router() {\n  return (\n    <HashRouter>\n      <App />\n    </HashRouter>\n  );\n}\nexport default Router;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Router from \"./Router\";\nimport \"./index.css\";\n\nReactDOM.render(React.createElement(Router), document.getElementById(\"root\"));\n"],"sourceRoot":""}